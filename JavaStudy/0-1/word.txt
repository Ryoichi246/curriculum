調べたことまとめ

■IT
  

・IT
インターネットなどの通信とコンピュータとを駆使する情報技術。

・ICT
Information and Communication Technology
情報通信技術

・loT
Internet of Things
物がインターネット経由で通信すること
あらゆるものがインターネットを通じてコミュニケーションをとるloT機器などが最近アツい


■OS


・OS
所謂オペレーションシステム
WindowsやMac、Linuxなど。
基本ソフトウェアとも呼ばれている。
これがあるおかげでハードウェアを制御できたり応用ソフトウェア(アプリ)を利用できている。

・Windows
直感的な操作感を実現するGUIを採用しており、世界的にもかなりシェアが高いOS。
Javaエンジニア間でもかなり使われているらしい。
Microsoftが提供している。

・macOS (Mac OS X)
Appleが提供するMac用のOS
こちらもGUIを採用している。
イメージ的にスタイリッシュ

・UNIX
Linuxの先祖
Windowsやmacと違いCUIを採用しており基本的な操作はコマンドで行い、初心者には使いにくい。
しかし、無駄な部分をそぎ落としたことにより軽く、低スペでも動く。

・Linux
UNIXを土台にフィンランドの学生によってとっかかりが作られ、様々なディストリビューションがいまもなお
開発されているのOS。
基本的にはUNIXと同じくCUIを採用しているが、Windowsと同じような使用感で使えるUbuntuなどのディストリ
ビューションも存在している。
非常に安価。というか基本無料。オープンソースなのでいくらでも中身をいじくりまわせるし配布も楽。


■言語・環境


〇マークアップ/フロントエンド

・HTML
ハイパーテキスト・マークアップ・ランゲージ
ウェブぺージを制作するために開発された言語
文字をクリックしたら他のサイトに飛べるテキスト(ハイパーリンクテキスト)を実装できる
ホームページ上に実装したい文章や各要素の意味、情報構造を指示できる。

・CSS
カスケ―ディングスタイルシート
ウェブページのスタイルを指示するための言語
HTMLと組み合わせて使う。
スクリーンに出力される際の色、サイズ、レイアウトをこっちで担当。

・JavaScript
ウェブページにて動的な処理ができるようになるプログラミング言語
javaと名前が似ているのは、javaの人気に肖ろうとした結果である。
特に関連性はない。HTMLとCSSと同時に運用されることが多そうな印象。

・jQuery
ウェブサイトを作るうえで役に立つ、javascriptで作られたライブラリ
ブラウザの互換性に優れていると言われている。javascriptのライブラリのデファクトスタンダード

・Java SE
APIの事。ほかにはJava SE,Java EEがある。
javaの基本機能をまとめたもの。一番スタンダードな物。

〇サーバーサイド
サーバー側でプログラムを実行したりデータを管理したりすること。
サーバーサイドでは、クライアントの環境に依存しにくく、開発や管理が容易、
扱うデータをサーバー側のデータベースなどで一元管理できる、といったメリットがある。
代表的なサーバーサイド技術としては、Java、PHP、ASP.NETなどがある。

・.NET
一般的に.NET Frameworkと呼ばれるアプリケーションを刺す言葉としてつかわれる。
主にMicrosoft .NET Framework（マイクロソフト ドットネット フレームワーク）
というアプリケーション、または開発環境を指す単語
.NET Frameworkは、Windowsとの相性の良さから、Windows系の
システム開発で用いられることが多くなっている。


■ サーバーソフト


・Apache
世界的に使われているサーバーソフトウェア。サーバー構築のために必要。無料。

・nginx
世界的なシェアはapachに次いで二位。ポイントとしては、高速、大量処理が得意、
Ｗｅｂサイト利用を向上させる機能が豊富、設定は意外と容易
であるということ。
アパッチに比べてダウンしにくい。

・IIS
無料で利用できるＷｅｂサーバーソフト。
ASP(.NET Framework)を使って簡単に動的なWebページを作成出来る。
ASP(.NET Framework)以外の言語(PHPやJava)で開発された物を動かすには、ほとんど利点がない。


■ SQL


・SQL
データベースを操作するための言語。

・DB2
ＩＢＮ社のリレーショナルデータベース管理システムの事。

・MySQL
無料で人気なデータベース管理システム。シェアがすごい。
2020年時点ではOracleｎ次ぐ。

・Maria DB
Mysqlの派生として開発されているＲＤＢＭＳ。アザラシがトレードマーク
オラクルにMySQLが買収された後、MySQLの開発者たちがオラクルの独裁を阻止するために
カウンターパートとして作られた。MySQLと完全な互換性がある。

・Oracle DB
オラクルが開発しているデータベース管理システム。シェアがすごい。

・PostgreSQL
Postgresは、オブジェクトリレーショナルデータベース（ORDBMS）であり、
テーブルの継承や関数のオーバーロードなどの機能を備えているが、
MySQLが純粋なリレーショナルデータベース（RDBMS）であるのに対して、
Postgresはオブジェクトリレーショナルデータベース（ORDBMS）。

・SQLite
著作権が放棄されパブリックドメインで誰もが自由に利用できる。
組み込み型RDBM。

・SQL Server
Microsoft SQL Serverが正式名称。Microsoftが開発した。
Microsoft社が開発しているため、Windows OSとの相性がよく、
Windows Serverで利用されることが多いデータベースとなっている。
基本的には有償となるが、無償で利用可能なエディションも用意されている。

・CRUD
ほとんど全てのコンピュータソフトウェアが持つ永続性の4つの基本機能のイニシャルを並べた用語。
 その4つとは、Create（生成）、Read（読み取り）、Update（更新）、Delete（削除）である。

・トランザクション
複数のsql文を一括で実行するためにまとめたもの、もしくはまとめる事。
ecサイトの決済など、一瞬のうちに状況が変動するようなものに使われる。

・コミット
 ITの分野では、処理や変更などを確定させる、反映させる、といった意味で用いられることが多い。

・ロールバック
トランザクションの内容をキャンセルさせるための動作。

・排他制御（排他ロック）
はいたせいぎょ）とは、コンピュータ・プログラムの実行において、
複数のプロセスが利用出来る共有資源に対し、
複数のプロセスからの同時アクセスにより競合が発生する場合に、
あるプロセスに資源を独占的に利用させている間は、
他のプロセスが利用できないようにする事で整合性を保つ処理の事をいう。
データがとんでもないことになるのを防ぐ。

・楽観ロック
めったなことでは他者との同時更新は起きないであろう、という楽観的な前提の排他制御。
データそのものに対してロックは行わずに、更新対象のデータがデータ取得時と
同じ状態であることを確認してから更新することで、データの整合性を保証する方式。

・悲観ロック
排他制御の代表的な方式の一つで、同じデータを他者が頻繁に更新するという悲観的な考え方の
排他制御。具体的には、更新対象データを取得時にロックして他者が操作できないようにする方式。

・実行計画
SQLserverがユーザーが発行したSQLを解析し決定した実データに対して
、どのようにアクセス・計算を行うかが記載されている計画書。
 SQLはDBの「どの」データを取得するかをユーザーが指定するが、
「どのように」そのデータを探して取得するかはSQLserverのオプティマイザ機構が決定する。

・チューニング
IT業界においてはシステムやプログラムなどを改良し、パフォーマンスの向上を図ることを言う。
基本的には「調律」や「同調」を意味する言葉であり、
主に音楽業界やテレビ、ラジオ業界で使われるイメージだが、
意味合いとしてはほぼ同じだと思ってよい。
データベースの場合。同じデータを扱うにしても、
それを使用する媒体によって処理速度が変化したり、かかる負荷（必要なメモリー量）が違ったりする。
こういった時、出来る限り手間がかからず、使いやすいように調整を行う。

・パフォーマンス
性能、能力、実績、業績、成果、成績、実行、遂行、演技、演奏、公演、行動などの意味を持つ英単語。
 ITの分野では、コンピュータなどの機器やソフトウェア、システムなどの処理性能や実行速度、
通信回線・ネットワークなどの伝送速度・容量などのことを指すことが多い。

・スロークエリ
データベース管理システム（DBMS）に対する問い合わせ（クエリ）のうち、一定の基準に照らして遅い、
時間がかかっているもの。 システム性能の制約となるボトルネックとなっている可能性が高い箇所とみなされる。

・クエリログ
MySQL サーバが実行した全ての SQL クエリを出力するログ

・IDE（統合開発環境）
ソースコードを記述するエディタ、ソースコードからプログラムを生成するコンパイラ、
コードの不正を発見・修正するデバッガなどのプログラム開発ツールをひとまとめにした開発環境のこと。


・Eclipse
開発を効率化するための統合開発環境（コンパイラ・エディタ・デバック機能などがセットになったツール。
主Javaの開発環境として使用されているが、C++・Ruby・PHPなどでも利用可能。

・NetBeans
オラクルをメインとして開発されているオープンソースの統合開発環境。
GUIエディタを持つ。

・SpringToolSuite
STSはSpring Framwrowkの開発元が提供しているEclipseをベースとして作成された統合開発環境(IDE)で、
Spring Frameworkを利用した開発に適した機能が備えられている。

・DBツール
データベース管理タスクに使用できるツール、ユーティリティおよび補助ツールの総称。

・A5:SQL Mk-2
データベース操作ツール、対応しているデータベースが多い。

・pgAdmin
postgersSQLをGUIを用いて操作できるツール。

・DBeaver
無料のマルチプラットフォームデータベースツール、SQLクライアントツール。
仕事で使う分には A5:SQL Mk-2よりもおすすめされていた。

・MySQL Workbench
データベースアーキテクト、開発者、DBA のための統合ビジュアルツール。
データ・モデリング、SQL 開発、およびサーバー設定、ユーザー管理、
バックアップなどの包括的な管理ツールを提供。

・Sequel Pro
すでに作成されているMySQLのテーブル構造をよりわかりやすく確認できるアプリ

・TeamSQL
マルチプラットフォーム対応のデータベースGUIツール。
DBeaverと同列のもの。


■ 肩書


・PM
情報システムや組み込みシステムなど、システム開発プロジェクトにおける責任者。
 プロジェクトマネージャーは、プロジェクトの計画から運営管理、
スタッフのアサインやマネジメントまで、プロジェクトの全工程に関わる。

・PL
プロジェクトリーダー。システムの構築・導入プロジェクトにおいて、
プロジェクトチームを管理・統括する業務。
基本的にPMは１つのプロジェクトに1人ですが、PMの下に配置されるPLは複数名存在します。

・PG（PE）
プログラマー。seのもとでプログラムをひたすら書いていく末端の人間。

・SE
PMとPEの間に位置する。一通りのことはできる。中間管理職感が強そう。

・デザイナー
ウェブデザイナーとかかなーと。
ノーコーダーがいっぱいいそう。

・エンジニア
技術職。

・フロントエンド・エンジニア
主に顧客に見える範囲の技術などをメインに扱っている。

・サーバーサイド・エンジニア
サーバーサイドは基幹系企業に使われることが多い印象とのこと。
バックエンドとかなり重なる。

・バックエンド・エンジニア
フロントエンド側からデータや指示を受け付け、計算や変換などの処理を行ったり、
ストレージ（外部記憶装置）やデータベースなどでデータの保存や読み出しを行う技術を扱う。
バックエンドはWEB系企業に使われることが多く、フロントエンドに対して使われている。

■ UI（ユーザーインターフェース）

・UI
ユーザーインターフェイス（User Interface）の略称で、
一般的にユーザー（利用者）と製品やサービスとのインターフェース（接点）すべてのことを意味する。

・CUI
コンピュータやソフトウェアが利用者に情報を提示したり操作を受け付けたりする方法
（UI：ユーザーインターフェース）の類型の一つで、すべてのやり取りを文字によって行う方式。

・GUI
Graphical User Interface（グラフィカル・ユーザ・インターフェース）の略で、
グラフィックベースの操作体系を持つUI（User Interface）のこと。
 情報の表示にグラフィックを多用しており、命令文を入力して実行する方式(CUI)に比べ、
直感的に操作することが可能。

■ ファイル／ディレクトリ

・ファイル
コンピュータにおけるデータの管理単位の一つで、
ストレージ装置（外部記憶装置）などにデータを記録する際に利用者やOSから見て最小の記録単位となるデータのまとまり。

・拡張子
ファイルの種類を識別するためにファイルの名前（ファイル名）の末尾につけられる文字列。

・ディレクトリ
CUIの中でのファイルにあたるもの。

・ルート・ディレクトリ
階層型ファイル構造における最上階層のディレクトリ。

・カレント・ディレクトリ
いま操作しているディレクトリ。

・パス
パソコンの中に保存されているファイルやフォルダーなどのデータの保存場所を示す経路のこと。

・絶対パス
ファイルなどの所在を書き表すパス（path）の表記法の一つで、階層構造の頂点（最上位階層）からの位置関係を記述する方式。

・相対パス
今いるディレクトリからのパス。当然場所によって違ってくる。


■ ネットワーク

・LAN
local area networkの略。ローカル、つまり比較的狭い範囲を指す。
家庭内LAN、社内LANなどという言葉があることからも大体想像できる。

・WAN
wide area networkの略。これはもっと広い範囲を指している。基本てきに個人や法人がWANを自分で引く
事はなく、プロバイダーが引いているものを使わせてもらうといったことが多い。
費用が莫大なのである。

・サーバー
サービスを供給するコンピュータ。実際のところは、みんなが使っているコンピューターよりも性能がいい
というだけのものである。

■ 各種プロトコル

・HTTP
Hyper text trancefer protocol。
データを送受信するためのプロトコル。
データをサーバとクライアントの間で通信するときの通信規約（プロトコル）がHTTP。
HTMLなどのハイパーメディア文書を転送するためのアプリケーション層プロトコル。
セキュリティ面での脆弱性があり情報ががばがばなので、現在では、HTTPSが使われている。

・FTP
File Trancefer Protocol。インターネットの誕生とともに使われ始めた歴史のある技術。
セキュリティがガバガバなので、セキュリティを加えたSFTPが使わせている。
サーバーと直接データのやり取りをすることができる。というか、ＰＣ越しにサーバー
ないのファイルをいじくれる。

・HTTPS
通信が暗号化されている。HTTPの強化版。すごい。
末尾のsはセキュアの事。

・SSL
インターネット上でやり取りする情報を暗号化して送受信するための仕組み。


・SSH
ネットワークを経由して他のコンピュータに接続し、遠隔操作するための仕組み。
通信途中の情報はすべて暗号化されるので比較的安全。

・ポート、ポート番号
TCP/IP通信において、 コンピュータが通信に使用するプログラムを識別するための番号、またその概念。
16Bitの整数であり、0~65535まで存在する。


・HTTP、FTP、SSHの各ポート番号
HTTP 80
FTP 21
SSH 22


・ファイアウォール
ネットワークの通信において、その通信をさせるかどうかを判断し許可するまたは拒否する仕組。
通信間にこいつが挟まることによってインターネットからの不正な侵入を防ぐことができる。
ただしウェブサイトの脆弱性をついた攻撃などに対してはあまり効果的ではない。

・TCP
TCP (Transmission Control Protocol) は、IPと同様にインターネットにおいて標準的に利用されて
いるプロトコル。IPの上位プロトコル。UDPとくらべ信頼性の高い通信を供給し、データの欠損などが
少ない。
コネクション型通信（通信開始前に相手との間で仮想的な通信路を確保する）である。

■ IPアドレス

・IPアドレス
IPアドレス(Internet Protocol Address)とは、インターネット上に接続された機器が持つナンバーのこと。
パソコンやスマートフォンなどネットワーク上の機器を識別するために割り当てられていて、
インターネット上での住所のような役割を担っている。
8bit×４＝4byte、4bitごとに10進数で表記するのが一般的である。

・グローバルIPアドレス
インターネットで相手と通信するために持つ、ほかのアドレスと重複しない一意のIPアドレス。
インターネット通信内での住所のような位置づけ。

・プライベートIPアドレス
プライベートネットワークないで割り当てられるＩＰアドレス。
この値はインターネット上で使うことができない。

■ ドメイン

・ドメイン
インターネット上の住所表示としてたとえられる。電子メールを送ったり、ウェブサイトを見るために
必要である。

・DNS
ドメイン名を管理するためのシステム。IＰアドレスとドメイン名を紐づけるシステム。

・VPN
バーチャルプライベートネットワーク。仮想的にプライベートな回線を引き、小さなイントラネット
を形成している。

・ブリッジ

・プロキシサーバー

■ 電子メール

・SMTP
メールを相手のメールサーバーに届けるまでの仕組み。

・POP
メールをメールサーバーにとりに行く仕組み。
メールを取得すると、サーバーからメールはなくなってしまう。

・IMAP
「Internet Message Access Protocol（インターネット・メッセージ・アクセス・プロトコル）」
メールをサーバーから取得してもサーバーからメールがなくならない。これはメールはコピーを
ダウンロードしているだけだからなのであるが、
つまるところユーザーのメールをサーバーがかなりの依存度で管理しているのである。

■ セッションとクッキー

・セッション
アクセスの開始から終了までの一連の通信の事。ポイントは「一連」の通信であるということ。
例えば、あるＷｅｂサイトにアクセスして、そのサイト内で、３ページを閲覧して離脱したとする。
３ページ閲覧したものの、これは1セッションとして扱われる。

・クッキー
ユーザー情報をクライアントのブラウザに保存する技術。
これのおかげでＷｅｂサイトを快適に見ることができている。
その正体はテキストファイル。Ｗｅｂサイトが必要であろうユーザー情報
を保存している。ファイルサイズは極小なのでスマホの空き容量を圧迫することはない。

・キャッシュ
クッキーと違ってサイトの情報を保存している仕組み。訪問ページの読み込み速度が上がるだけ。
あくまでキャッシュを取得した時点のでーたを保存しているだけなので、更新後のデータは反映されない。
スーパーリロードをすれば解決する。

■ DB（データベース）について

・インデックス
データベースの性能を向上させる方法の一つ。インデックスは「探すレコードを識別するデータの項目」
「対象レコードの格納位置を示すポインタ」で構成されている。これを利用してデータの格納位置を
特定し、その位置を直接アクセスすることで、票の検索速度を上げることができる。
インデックスが設定されていない場合、テーブルの初めからひとつづつ探さなければならず、かなり
しんどい、時間がかかる。

■ テストについて

・フロー
フローとは、文字通り流れである。テストの際に踏む段階のことなどを言ったりするようだが、あえて
ふんわりした理解でいいと思われる。

＊単体テスト：クラスや関数といった単位のプログラムのテスト
	機能確認テスト：一つのモジュールが設計書や仕様通りに動作することを確認するテスト
	制御フローテスト：プログラムの論理構造に沿って、命令や分岐などが実行される確認するテスト
	データフローテスト：データや変数が定義、仕様、消滅、の順に行われているかを確認するテスト

＊結合テスト：単体テストで調べたものを結合した状態でするテスト
	状態遷移テスト：状態遷移図や状態遷移表に基づいて考査を確認するテスト

＊機能テスト：機能確認テスト。実際にプログラム一つとして動くかどうかを調べる。

＊システムテスト：個々のプログラムや機能性を結合したプログラムが
　　　　　　　　　仕様通りに動くかを検証するためのテスト
	回帰テスト：修正・変更を行った後に、ちゃんと動くかどうかを確認するテスト
	デグレードチェックテスト：修正・変更を行った後に、あらたな不具合が生まれていないかを
				　確認するテスト
	評価テスト：セキュリティテスト：悪意ある外部からの攻撃への対応や脆弱性が存在しないか
					を確認するテスト
	etc....
	
■ チケット管理ツール
タスクをチケットとして管理するツール。
発生日や作業内容、優先度、担当者や期日を登録して管理する。
プロジェクト管理ではチケットの発行・処理枚数により、プロジェクト全体の状況を把握する手段

・タスク
仕事の事、この場合チケットといった方がいいかもしれない。

■ バージョン管理

・Git
バージョン管理システム（Version Controll System）と呼ばれる種類のアプリケーションの1つ。
また、分散型バージョン管理システムである。
Gitを使うことでソースコードに対して行った変更を複数人で共有し、効率よく開発を進めることが
できるようになる。

・SVN
Sub versionの略。昔によく使われていたソース管理システムの事。
いまはGitのほうがよくつかわれている。レガシー環境。

・デグレ
デグレードのこと。
システム開発におけるプログラム修正やインフラ設定の変更等により、
それまで正常に動作していた機能が動かなくなるという、品質低下のトラブル事象を指す。

・マージツール
バージョン管理されているファイル群に対して行われた変更を統合する操作を管理するツール



